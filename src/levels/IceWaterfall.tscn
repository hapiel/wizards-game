[gd_scene load_steps=14 format=2]

[ext_resource path="res://src/misc/TileMap12x12.tscn" type="PackedScene" id=1]
[ext_resource path="res://src/player/Player.tscn" type="PackedScene" id=2]
[ext_resource path="res://src/enemies/IceWizardStatic.tscn" type="PackedScene" id=3]
[ext_resource path="res://src/shader/Waterfall.gd" type="Script" id=4]
[ext_resource path="res://icon.png" type="Texture" id=5]

[sub_resource type="Shader" id=1]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/2d-waterfall

Feel free to improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform vec2 scale; // Used for sprite script. Don't edit this value in the inspector.
uniform float zoom; // Used for sprite script. Don't edit this value in the inspector.

uniform sampler2D refraction_map;
uniform sampler2D water_mask;

uniform vec2 gap_stretch = vec2(0.8, 0.05);
uniform vec2 refraction_stretch = vec2(2.0, 0.8);
uniform float refraction_strength : hint_range(0.0, 0.1) = 0.02;

uniform vec4 water_tint : hint_color = vec4(0.2, 0.6, 1.0, 0.1);
uniform vec4 water_highlight : hint_color = vec4(1.0, 1.0, 1.0, 0.3);
uniform float speed = 1.0;
uniform float flow_gaps : hint_range(0.0, 1.0) = 0.33;
uniform float highlight_width : hint_range(0.0, 0.3) = 0.02;

void fragment()
{
	// Get the two noise textures and make them move on the y axis. The gaps move twice as fast as the refraction, but you can tweak this by changing (speed * 0.5)
	vec2 refraction_offset = texture(refraction_map, vec2(UV.x, UV.y + -TIME * speed * 0.5) * scale * refraction_stretch).xy;
	vec2 gap_mask = texture(water_mask, vec2(UV.x, UV.y + -TIME * speed) * scale * gap_stretch).xy;
	
	// Set values between -0.5 and 0.5 (instead of 0 and 1). Otherwise the reflection will move whith increased refraction_strength
	refraction_offset -= 0.5; 
	
	// Get the screen texture and distort it
	vec4 refraction = texture(SCREEN_TEXTURE, SCREEN_UV - refraction_offset * refraction_strength * zoom);
	
	
	// Create holes and apply colors and textures //
	
	vec4 color = vec4(1.0);
	
	// Define what values will be the water highlight color (the gap border)
	float inner_edge = flow_gaps + highlight_width;
	
	// See if the pixel is within the edges range and use the water colors alpha to blend between showing color or refraction texture.
	if (gap_mask.x < inner_edge)
	{
		color.rgb = mix(refraction.rgb, water_highlight.rgb, water_highlight.a);
	}
	else
	{
		color.rgb = mix(refraction.rgb, water_tint.rgb, water_tint.a);
	}
	
	// If the value is below the gap threshhold make it transparent (a gap)
	if (gap_mask.x < flow_gaps)
	{
		color.a = 0.0;
	}
	
	
	// Crate Edge Shape //
	
	// Set the shape for the top and bottom edges. Use water_mask as shape but with other values to flatten it out horizontally. 
	vec2 water_edge = texture(water_mask, vec2(UV.x, UV.y + -TIME * 0.1) * scale * vec2(0.15, 0.6)).xy;
	water_edge -= 0.5;
	
	// Use the same mask as for the gaps for left and right edge.
	vec2 vertical_edge_mask = gap_mask - 0.5;
	
	// Apply the new masks to the edges. This will make the wobble effect.
	color.a = mix(0.0, color.a, step(UV.x + vertical_edge_mask.x * 0.2, 0.92)); // Right edge
	color.a = mix(color.a, 0.0, step(UV.x - vertical_edge_mask.x * 0.2, 0.08)); // Left edge
	
	color.a = mix(0.0, color.a, step(UV.y + water_edge.y * 0.1, 0.95));  //Bottom edge
	color.a = mix(color.a, 0.0, step(UV.y - water_edge.y * 0.05, 0.05)); //Top edge
	
	COLOR = color;
}"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
noise = SubResource( 2 )

[sub_resource type="OpenSimplexNoise" id=4]

[sub_resource type="NoiseTexture" id=5]
noise = SubResource( 4 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 1 )
shader_param/scale = Vector2( 1, 1 )
shader_param/zoom = 1.88775
shader_param/gap_stretch = Vector2( 0.7, 0.05 )
shader_param/refraction_stretch = Vector2( 9, 0.8 )
shader_param/refraction_strength = 0.021
shader_param/water_tint = Color( 0.0705882, 0.290196, 0.509804, 0.345098 )
shader_param/water_highlight = Color( 1, 1, 1, 0.3 )
shader_param/speed = 1.0
shader_param/flow_gaps = 0.33
shader_param/highlight_width = 0.049
shader_param/refraction_map = SubResource( 3 )
shader_param/water_mask = SubResource( 5 )

[sub_resource type="RectangleShape2D" id=7]
extents = Vector2( 26, 24.2824 )

[sub_resource type="RectangleShape2D" id=8]
extents = Vector2( 246, 10 )

[node name="Node2D" type="Node2D"]

[node name="Player" parent="." instance=ExtResource( 2 )]
position = Vector2( 53, 253 )

[node name="IceWizardStatic" parent="." instance=ExtResource( 3 )]

[node name="TileMap" parent="." instance=ExtResource( 1 )]
tile_data = PoolIntArray( 0, 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0, 5, 0, 0, 6, 0, 0, 7, 0, 0, 8, 0, 0, 9, 0, 0, 10, 0, 0, 11, 0, 0, 12, 0, 0, 13, 0, 0, 14, 0, 0, 15, 0, 0, 16, 0, 0, 17, 0, 0, 18, 0, 0, 19, 0, 0, 20, 0, 0, 21, 0, 0, 22, 0, 0, 23, 0, 0, 24, 0, 0, 25, 0, 0, 26, 0, 0, 27, 0, 0, 28, 0, 0, 29, 0, 0, 30, 0, 0, 31, 0, 0, 32, 0, 0, 33, 0, 0, 34, 0, 0, 35, 0, 0, 36, 0, 0, 37, 0, 0, 38, 0, 0, 39, 0, 0, 65536, 0, 0, 65571, 0, 0, 65575, 0, 0, 131072, 0, 0, 131107, 0, 0, 131111, 0, 0, 196608, 0, 0, 196641, 2, 0, 196643, 0, 0, 196647, 0, 0, 262144, 0, 0, 262174, 0, 0, 262175, 0, 0, 262176, 0, 0, 262177, 0, 0, 262178, 0, 0, 262179, 0, 0, 262183, 0, 0, 327680, 0, 0, 327719, 0, 0, 393216, 0, 0, 393255, 0, 0, 458752, 0, 0, 458775, 0, 0, 458776, 0, 0, 458791, 0, 0, 524288, 0, 0, 524327, 0, 0, 589824, 0, 0, 589863, 0, 0, 655360, 0, 0, 655399, 0, 0, 720896, 0, 0, 720903, 0, 0, 720904, 0, 0, 720914, 0, 0, 720915, 0, 0, 720935, 0, 0, 786432, 0, 0, 786471, 0, 0, 851968, 0, 0, 852000, 2, 0, 852007, 0, 0, 917504, 0, 0, 917527, 0, 0, 917528, 0, 0, 917529, 0, 0, 917530, 0, 0, 917531, 0, 0, 917532, 0, 0, 917533, 0, 0, 917534, 0, 0, 917535, 0, 0, 917536, 0, 0, 917537, 0, 0, 917543, 0, 0, 983040, 0, 0, 983062, 0, 0, 983063, 0, 0, 983079, 0, 0, 1048576, 0, 0, 1048577, 0, 0, 1048578, 0, 0, 1048579, 0, 0, 1048580, 0, 0, 1048581, 0, 0, 1048582, 0, 0, 1048583, 0, 0, 1048584, 0, 0, 1048585, 0, 0, 1048615, 0, 0, 1114112, 0, 0, 1114113, 0, 0, 1114114, 0, 0, 1114115, 0, 0, 1114116, 0, 0, 1114117, 0, 0, 1114118, 0, 0, 1114119, 0, 0, 1114120, 0, 0, 1114121, 0, 0, 1114130, 0, 0, 1114151, 0, 0, 1179648, 0, 0, 1179663, 0, 0, 1179664, 0, 0, 1179665, 0, 0, 1179666, 0, 0, 1179667, 0, 0, 1179668, 0, 0, 1179669, 0, 0, 1179670, 0, 0, 1179671, 3, 0, 1179687, 0, 0, 1245184, 0, 0, 1245207, 0, 0, 1245208, 0, 0, 1245223, 0, 0, 1310720, 0, 0, 1310759, 0, 0, 1376256, 0, 0, 1376257, 0, 0, 1376284, 2, 0, 1376286, 3, 0, 1376294, 0, 0, 1376295, 0, 0, 1441792, 0, 0, 1441793, 0, 0, 1441794, 0, 0, 1441795, 0, 0, 1441796, 0, 0, 1441797, 0, 0, 1441798, 0, 0, 1441799, 0, 0, 1441800, 0, 0, 1441801, 0, 0, 1441802, 0, 0, 1441803, 0, 0, 1441804, 0, 0, 1441805, 0, 0, 1441806, 0, 0, 1441807, 0, 0, 1441808, 0, 0, 1441809, 0, 0, 1441810, 0, 0, 1441811, 0, 0, 1441812, 0, 0, 1441813, 0, 0, 1441814, 0, 0, 1441815, 0, 0, 1441816, 0, 0, 1441817, 0, 0, 1441818, 0, 0, 1441819, 0, 0, 1441820, 0, 0, 1441821, 0, 0, 1441822, 0, 0, 1441823, 0, 0, 1441824, 0, 0, 1441825, 0, 0, 1441826, 0, 0, 1441827, 0, 0, 1441828, 0, 0, 1441829, 0, 0, 1441830, 0, 0, 1441831, 0, 0 )

[node name="Area2D" type="StaticBody2D" parent="." groups=[
"waterfall",
]]
position = Vector2( 336, 138 )
scale = Vector2( 0.5, 5.3125 )
collision_layer = 0
collision_mask = 16
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="Waterfall" type="Sprite" parent="Area2D"]
material = SubResource( 6 )
position = Vector2( 2, 0.188236 )
texture = ExtResource( 5 )
script = ExtResource( 4 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 7 )

[node name="tempfloor" type="StaticBody2D" parent="."]
position = Vector2( 249, 271 )
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="tempfloor"]
shape = SubResource( 8 )
disabled = true

[connection signal="item_rect_changed" from="Area2D/Waterfall" to="Area2D/Waterfall" method="_on_Sprite_item_rect_changed"]
